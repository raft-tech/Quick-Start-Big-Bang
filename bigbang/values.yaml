# File sourced from https://repo1.dso.mil/platform-one/big-bang/bigbang/-/raw/1.14.1/tests/ci/k3d/values.yaml
# with some further tweaks made to add the ingress certs for bigbang.dev and tweak resource usage to fit on a
# typical dev laptop

hostname: bigbang.dev

flux:
  interval: 1m
  rollback:
    cleanupOnFail: false

networkPolicies:
  controlPlaneCidr: 172.16.0.0/12

logging:
  enabled: true
  values:
    elasticsearch:
      master:
        count: 1
        persistence:
          size: 5Gi
        resources:
          requests:
            cpu: 100m
          limits: {}
      data:
        count: 1
        persistence:
          size: 5Gi
        resources:
          requests:
            cpu: 100m
          limits: {}
    kibana:
      count: 1

fluentbit:
  values:
    securityContext:
      privileged: true

istio:
  enabled: true
  values:
    kiali:
      dashboard:
        auth:
          strategy: "anonymous"
  ingressGateways:
    public-ingressgateway:
      type: "NodePort"
      nodePortBase: 32000
  gateways:
    public:
      tls:
        key: |
          -----BEGIN PRIVATE KEY-----
          MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDblED+9kEXvVDT
          rWVvF7VVDmyc19UlJTZNY/VIJb1ceYX45VW3vtzSSgFHJMhIuJHKUMQCXvEM10+w
          yqizsnvgZjw37tzf5wt9ST3ZHqhNn4frYcr6CgRkfcyL9Vr+y+/cFvYAZV10YCa8
          8SXmxazoTNlAG1ptSf2owLa/1c3FAuzRJZVz8xWthnLcRlpiH9UsNtjlOH10cG8r
          JM+6XwnN7bgipT6ID9g+JfKiuPlzqLgFD7cYF10nwHrXeFJVW/HfAqaA1QVw+teo
          W9FJHcIdDpXwG4UCt5a1PZ2LDrwJRb7L1fNooLj8iNV2ITeCbDNSSANNuiI8Mj2i
          teugbK8tAgMBAAECggEANnfrO5PYh8wFfczYiZtG9wdx9+IuVF2Lv9zY3oHGHGdk
          zV4OSltFKcED2iMMr8VhHN+2D6R/hSDv+rn66UCQLBUQQQu2rLACkJyXhAFv3HmD
          XOdQU4AioM7364v8e5IZOO5VLbn3WcP0OBBVx44nmyRdC+L9JnkhPDg53RJrTcA7
          Tuelt8aH8qoCNmFqyhnXPwhG6vLM2mokHTvs6jyYPESHmTkrSQ8C3sLt4SXB8yTh
          QcuRar6hYYzykvsMUMUKAahDIcxq1YZz8Q4VRajZMUIcajys9e0jo4ebIL5z3Hv7
          OSjgpRlDAfiuYEO65rM1wVGUFr5izsmDN+y4g5LqIQKBgQD1P3ieEw8IoErJsvPw
          Yq7Th0562vcBWLkQLxHQOyUejdXfYswJOlQikqE0UIdpwi+ZGQr22V64BhVdixDT
          jsM4w08uw7hI92yMXdBKERxDbhcLEoZsOulsTx6ckSlqFzIEDvTOzw9DcBOBMM7J
          U0lxr9TbLRyUaj+KaB0E7pc5hQKBgQDlNLCgJhpmAPd+YuIee4SzVgW8hNXbU86z
          KZ01KRDn+iX9WXb4U9KbZEgvlqbcEWwzroNmt9DAdy9/f46DA7yhQZWRP31BebVz
          H44fDlZTnRLSTfO3wNv7jn4jIEMhro5fRtJ4Q69ojb0dVIQoMokO0X8uW7Dh+D1n
          cngDrix7iQKBgFsOpu0iLGnKghojjHkLWtgFG/l3hVCFrai5oUaMPzr59JfNae5f
          Ls/rW1k+MRjuVZfleXGvwYBYGeSydpvmHMvdkG/PkYPeAfqX9ncZpUHQBVRCG5Dh
          yrtBIR+GsjbGx/ZDy1dh/8vNOCC2i4CqoNFKNKDwPfVJAbCU+XlUUOe1AoGBAM57
          ySJ9MQrzlAKn0kzjuYhV1pUelgogVfXRZ26csD5LfC3giuzrlq+mh+FXNrrKd0+X
          x4ihz82TkZaqsxgUJbqf+r3/FDgIDQ7JPp97qwloV6xdzVGczJCyra+3QML3Hgt3
          IeR2FW97QQNLQEN2Q0K2OHzq3U6085xd4wBtyGUBAoGBAJcgKNJm/nMag/h1lhE7
          USHV3WDg6C+DlDtYIUDVIzAONCCgHsyFFauRwMbU4og0AJWugr1hwdMZB2OV0GMO
          z4Ezj2gbpnTVRa0MgIjp6Ps3jBoIbx2pVpN/CrGyCVjjEA3TBCpYpCc17L1QohWd
          n8/5GDwf6hnqpEIhtN8V+U2t
          -----END PRIVATE KEY-----
        cert: |
          -----BEGIN CERTIFICATE-----
          MIIC0DCCAbgCAQAwDQYJKoZIhvcNAQELBQAwLTEVMBMGA1UECgwMZXhhbXBsZSBJ
          bmMuMRQwEgYDVQQDDAtiaWdiYW5nLmRldjAeFw0yMTA5MjkwMDEyMjdaFw0yMjA5
          MjkwMDEyMjdaMC8xFjAUBgNVBAMMDSouYmlnYmFuZy5kZXYxFTATBgNVBAoMDG9y
          Z2FuaXphdGlvbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANuUQP72
          QRe9UNOtZW8XtVUObJzX1SUlNk1j9UglvVx5hfjlVbe+3NJKAUckyEi4kcpQxAJe
          8QzXT7DKqLOye+BmPDfu3N/nC31JPdkeqE2fh+thyvoKBGR9zIv1Wv7L79wW9gBl
          XXRgJrzxJebFrOhM2UAbWm1J/ajAtr/VzcUC7NEllXPzFa2GctxGWmIf1Sw22OU4
          fXRwbyskz7pfCc3tuCKlPogP2D4l8qK4+XOouAUPtxgXXSfAetd4UlVb8d8CpoDV
          BXD616hb0Ukdwh0OlfAbhQK3lrU9nYsOvAlFvsvV82iguPyI1XYhN4JsM1JIA026
          IjwyPaK166Bsry0CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEALioBk3MS19DDQl9J
          cg0gTMbxkMhXLRsKzJMciXjmP6Tovh58H5o8jacO9Zz1GGCO4IHPnuTz36+KE++N
          bEYwIrs0o8nARv/AbYKdCFBFb4OqxHZtOHai8DE/YxoiWPUyooG804x1k4D0yCiu
          azERa/5xHqiZ79VFhDIJtH8/CjMyBkrB7JIhrZvtX4pWrALqVnbsyp5OFB85eFNA
          Gm2Ks4AIMwE5e5x5IX7JrVtOWIDvxwzc3A3dgaFQ9NcVXh/O8GSn+dymwTCraUvH
          fU/foWI8VMVMPr+EDQMmSjgBwz+3Rqt7rNVX2OwRhAi/hI0SUhxtd/GqKx61e9g0
          MXdN4Q==
          -----END CERTIFICATE-----

clusterAuditor:
  enabled: true
  values:
    resources:
      requests:
        cpu: 100m
        memory: .5Gi
      limits: {}

monitoring:
  enabled: true
  values:
    alertmanager:
      alertmanagerSpec:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits: {}
    prometheusOperator:
      resources:
        requests:
          cpu: 200m
          memory: 400Mi
        limits: {}
    prometheus:
      prometheusSpec:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits: {}
    grafana:
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits: {}
    kubeStateMetrics:
      resources:
        requests:
          cpu: 10m
          memory: 32Mi
        limits: {}
    nodeExporter:
      resources:
        requests:
          cpu: 100m
          memory: 30Mi
        limits: {}

gatekeeper:
  enabled: true
  values:
    replicas: 1
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits: {}

twistlock:
  enabled: false
  values:
    console:
      persistence:
        size: 5Gi

# Explicitly enable all addons for CI
addons:
  argocd:
    enabled: false
    values:
      controller:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits: {}
      dex:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits: {}
      redis:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits: {}
      server:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits: {}
      repoServer:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits: {}

  authservice:
    enabled: false
    chains:
      minimal:
        callback_uri: "https://minimal.bigbang.dev"
    values:
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
        limits: {}

  gitlab:
    enabled: false
    sso:
      enabled: false
    values:
      global:
        rails:
          bootstrap:
            enabled: false
      gitlab-runner:
        resources:
          requests:
            cpu: 10m
          limits: {}
      gitlab:
        webservice:
          minReplicas: 1
          maxReplicas: 1
        sidekiq:
          minReplicas: 1
          maxReplicas: 1
        gitlab-shell:
          minReplicas: 1
          maxReplicas: 1
        gitaly:
          resources:
            requests:
              cpu: 50m
            limits: {}
        shared-secrets:
          resources:
            requests:
              cpu: 10m
            limits: {}
        migrations:
          resources:
            requests:
              cpu: 10m
            limits: {}
        task-runner:
          resources:
            requests:
              cpu: 10m
            limits: {}
      registry:
        hpa:
          minReplicas: 1
          maxReplicas: 1
      postgresql:
        metrics:
          resources:
            requests:
              cpu: 10m
            limits: {}
      minio:
        resources:
          requests:
            cpu: 50m
          limits: {}

  gitlabRunner:
    enabled: false
    values:
      resources:
        requests:
          memory: 64Mi
          cpu: 50m
        limits: {}

  anchore:
    enabled: false
    values:
      postgresql:
        persistence:
          size: 20Gi
      anchoreAnalyzer:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits: {}
      anchoreApi:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits: {}
      anchoreCatalog:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits: {}
      anchorePolicyEngine:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits: {}
      anchoreSimpleQueue:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits: {}
      anchoreEnterpriseFeeds:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits: {}
      anchoreEnterpriseRbac:
        authResource:
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
            limits: {}
        managerResources:
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
            limits: {}
      anchoreEnterpriseReports:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits: {}
      anchoreEnterpriseNotifications:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits: {}
      anchoreEntperpiseUi:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits: {}

  sonarqube:
    enabled: false
    values:
      plugins:
        install: []
      resources:
        requests:
          cpu: 100m
          memory: 200Mi
        limits: {}
      persistence:
        enabled: false
        size: 5Gi
      postgresql:
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits: {}
      tests:
        enabled: false

  minioOperator:
    enabled: false

  minio:
    enabled: false
    values:
      zones:
        servers: 1
      volumesPerServer: 1

  mattermostoperator:
    enabled: false

  mattermost:
    enabled: false
    elasticsearch:
      enabled: true
    values:
      replicaCount: 1
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits: {}
      minio:
        zones:
          servers: 1
        volumesPerServer: 1

  nexus:
    enabled: false
    values:
      persistence:
        # Do NOT set this below 4Gi, nexus will fail to boot
        storageSize: 10Gi
      nexus:
        # https://help.sonatype.com/repomanager3/installation/system-requirements#SystemRequirements-JVMDirectMemory
        env:
          - name: install4jAddVmParams
            value: "-Xms500M -Xmx500M -XX:MaxDirectMemorySize=500M -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
        resources:
          requests:
            cpu: 100m
            memory: 1500Mi

  velero:
    enabled: false
    plugins:
      - aws
    values:
      # Set provider name and backup storage location bucket name
      configuration:
        provider: aws
        # TODO: Bucket for this
        backupStorageLocation:
          bucket: bigbang-dogfood-velero
          prefix: ci
      #    config:
      #      region: us-west-1
      #      profile: test
      #  volumeSnapshotLocation:
      #    provider: aws
      #    config:
      #      bucket: velero
      #      region: us-west-1

      # schedules:
      #  mybackup:
      #    labels:
      #      myenv: foo
      #    schedule: "0 0 * * *"
      #    template:
      #      ttl: "240h"
      #      includedNamespaces:
      #        - foo

      # Set a service account so that the CRD clean up job has proper permissions to delete CRDs
      serviceAccount:
        server:
          name: velero

  keycloak:
    enabled: false
    ingress:
      gateway: "public"
    values:
      replicas: 1
      resources:
        requests:
          cpu: 10m
          memory: 16Mi
        limits: {}

